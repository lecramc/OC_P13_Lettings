# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
orbs:
  python: circleci/python@2.1.1
  docker: circleci/docker@2.0.1

jobs:
  test_and_lint: # this can be any name you choose
    executor: python/default # use the default executor defined within the orb
    steps:
      - checkout # checkout source code
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run test
          command: pytest
      - run:
          name: Run linting
          command: flake8
  build_and_push:
    docker:
      - image: cimg/python:3.11.1
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Install environement
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: execute linter
          command: |
            . venv/bin/activate
            flake8
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            pytest
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy to Dockerhub
          command: |
            docker build -t oc-p13 .
            docker login --username $DOCKERHUB_LOGIN --password $DOCKERHUB_PASSWD
            docker tag oc-p13 $DOCKERHUB_LOGIN/oc-p13:$CIRCLE_SHA1
            docker tag oc-p13 $DOCKERHUB_LOGIN/oc-p13:latest
            docker push $DOCKERHUB_LOGIN/oc-p13 --all-tags
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  p13-workflow:
    jobs:
      - test_and_lint
      - build_and_push
